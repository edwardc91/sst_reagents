# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-14 11:05
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EstadoEnvaseUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(blank=True, null=True)),
                ('estado', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EstadoProductoUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(blank=True, null=True)),
                ('estado', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EstadoUsoReactivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(blank=True, null=True)),
                ('estado', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Existencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(blank=True, null=True)),
                ('capacidad', models.PositiveIntegerField(blank=True, null=True)),
                ('unidad_medida', models.CharField(choices=[('mg', 'mg'), ('cg', 'cg'), ('dg', 'dg'), ('g', 'g'), ('dag', 'dag'), ('hg', 'hg'), ('kg', 'kg'), ('lb', 'lb'), ('ml', 'ml'), ('cl', 'cl'), ('dl', 'dl'), ('litro', 'litro'), ('dal', 'dal'), ('hl', 'hl'), ('kl', 'kl')], default='g', max_length=2, verbose_name='Unidad de medida')),
                ('almacenamiento_idoneo', models.NullBooleanField(default=True, verbose_name='\xbfEs idoneo el almacenamiento?')),
                ('tipo_envase', models.CharField(blank=True, max_length=100, null=True)),
                ('material_envase', models.CharField(blank=True, choices=[('Cristal', 'Cristal'), ('Met\xe1lico', 'Met\xe1lico'), ('Pl\xe1stico', 'Pl\xe1stico'), ('Cart\xf3n', 'Cart\xf3n'), ('Bolsas Multicapa', 'Bolsas Multicapa')], max_length=100, null=True)),
                ('firma', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PropiedadUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('propiedad', models.CharField(choices=[('Nocivo', 'Nocivo'), ('T\xf3xico', 'T\xf3xico'), ('Explosivo', 'Explosivo'), ('Oxidante', 'Oxidante'), ('Corrosivo', 'Corrosivo'), ('Irritante', 'Irritante'), ('F\xe1cilmente inflamable', 'F\xe1cilmente inflamable'), ('Extremadamente inflamable', 'Extremadamente inflamable'), ('Peligroso para el medio ambiente', 'Peligroso para el medio ambiente'), ('Muy t\xf3xico', 'Muy t\xf3xico')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Reactivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_frasco', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre del frasco')),
                ('nombre', models.CharField(blank=True, max_length=200, null=True)),
                ('r_reglas', models.CharField(blank=True, max_length=150, null=True)),
                ('s_reglas', models.CharField(blank=True, max_length=150, null=True)),
                ('n_cas', models.CharField(blank=True, help_text='Ej: 234-4-56', max_length=150, null=True)),
                ('n_nu', models.CharField(blank=True, max_length=150, null=True)),
                ('n_icsc', models.CharField(blank=True, max_length=150, null=True)),
                ('n_rtecs', models.CharField(blank=True, max_length=150, null=True)),
                ('n_ce', models.CharField(blank=True, max_length=150, null=True)),
                ('n_einecs', models.CharField(blank=True, max_length=150, null=True)),
                ('peso_molecular', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peso molecular')),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('local', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local', models.CharField(choices=[('Almac\xe9n', 'Almac\xe9n'), ('Ctrl de Calidad/Control de Entrada', 'Ctrl de Calidad/Control de Entrada'), ('Ctrl de Calidad/Control Final', 'Ctrl de Calidad/Control Final'), ('Control de Procesos', 'Control de Procesos'), ('Ctrl de Calidad/Cromatograf\xeda', 'Ctrl de Calidad/Cromatograf\xeda'), ('Ctrl de Calidad/Microbiolog\xeda', 'Ctrl de Calidad/Microbiolog\xeda'), ('Histopatolog\xeda', 'Histopatolog\xeda'), ('Laboratorio de S\xedntesis', 'Laboratorio de S\xedntesis'), ('Microbiolog\xeda', 'Microbiolog\xeda'), ('Parasitolog\xeda de Alcides', 'Parasitolog\xeda de Alcides'), ('Parasitolog\xeda de Serrano', 'Parasitolog\xeda de Serrano'), ('Planta de Tratamiento de Residuales', 'Planta de Tratamiento de Residuales'), ('Protozoolog\xeda', 'Protozoolog\xeda'), ('Toxicolog\xeda', 'Toxicolog\xeda'), ('UMEB', 'UMEB')], max_length=200)),
                ('user_auth', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Informacion adicional del usuario',
                'verbose_name_plural': 'Informacion de los usuarios',
            },
        ),
        migrations.AlterUniqueTogether(
            name='reactivo',
            unique_together=set([('nombre_frasco', 'local')]),
        ),
        migrations.AddField(
            model_name='propiedadup',
            name='reactivo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compounds_update_app.Reactivo'),
        ),
        migrations.AddField(
            model_name='existencia',
            name='reactivo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compounds_update_app.Reactivo'),
        ),
        migrations.AddField(
            model_name='estadousoreactivo',
            name='existencia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compounds_update_app.Existencia'),
        ),
        migrations.AddField(
            model_name='estadoproductoup',
            name='existencia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compounds_update_app.Existencia'),
        ),
        migrations.AddField(
            model_name='estadoenvaseup',
            name='existencia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compounds_update_app.Existencia'),
        ),
        migrations.AlterUniqueTogether(
            name='existencia',
            unique_together=set([('capacidad', 'unidad_medida', 'tipo_envase', 'material_envase', 'firma')]),
        ),
        migrations.AlterUniqueTogether(
            name='estadousoreactivo',
            unique_together=set([('estado', 'existencia')]),
        ),
        migrations.AlterUniqueTogether(
            name='estadoproductoup',
            unique_together=set([('estado', 'existencia')]),
        ),
        migrations.AlterUniqueTogether(
            name='estadoenvaseup',
            unique_together=set([('estado', 'existencia')]),
        ),
    ]
