# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-07 02:45
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EstadoEnvase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(max_length=50, unique=True)),
                ('descripcion', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Estado de los envases',
                'verbose_name_plural': 'Estados de los envases',
            },
        ),
        migrations.CreateModel(
            name='EstadoProducto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(max_length=20, unique=True)),
                ('descripcion', models.CharField(default='', max_length=40, unique=True)),
            ],
            options={
                'verbose_name': 'Estado de los productos',
                'verbose_name_plural': 'Estados de los productos',
            },
        ),
        migrations.CreateModel(
            name='EstadoReactivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(max_length=50, verbose_name='Uso')),
            ],
            options={
                'verbose_name': 'Estado de uso de los reactivos',
                'verbose_name_plural': 'Estados de uso de los reactivos',
            },
        ),
        migrations.CreateModel(
            name='Existencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=1)),
                ('capacidad', models.PositiveIntegerField(default=1)),
                ('unidad_medida', models.CharField(choices=[('mg', 'mg'), ('cg', 'cg'), ('dg', 'dg'), ('g', 'g'), ('dag', 'dag'), ('hg', 'hg'), ('kg', 'kg'), ('lb', 'lb'), ('ml', 'ml'), ('cl', 'cl'), ('dl', 'dl'), ('litro', 'litro'), ('dal', 'dal'), ('hl', 'hl'), ('kl', 'kl')], default='g', max_length=2, verbose_name='Unidad de medida')),
                ('almacenamiento_idoneo', models.BooleanField(default=True, verbose_name='\xbfEs idoneo el almacenamiento?')),
            ],
        ),
        migrations.CreateModel(
            name='Firma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GrupoPeligrosidad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=1, unique=True)),
                ('descripcion', models.TextField(blank=True, max_length=300, null=True)),
            ],
            options={
                'verbose_name': 'Grupo de Peligrosidad',
                'verbose_name_plural': 'Grupos de peligrosidad',
            },
        ),
        migrations.CreateModel(
            name='ImagenPropiedad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagen', models.ImageField(upload_to='Images/Propiedades')),
            ],
            options={
                'verbose_name': 'Pictograma',
                'verbose_name_plural': 'Pictogramas',
            },
        ),
        migrations.CreateModel(
            name='Local',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Locales',
            },
        ),
        migrations.CreateModel(
            name='MaterialEnvase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(max_length=2, unique=True)),
                ('descripcion', models.CharField(max_length=40, unique=True)),
            ],
            options={
                'verbose_name': 'Material de los envases',
                'verbose_name_plural': 'Materiales de los envases',
            },
        ),
        migrations.CreateModel(
            name='PeligroClasificacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=70)),
                ('clasificacion', models.CharField(max_length=100)),
                ('clasificacion_imco', models.CharField(max_length=4)),
                ('no_onu', models.CharField(max_length=4)),
                ('grupo', models.ManyToManyField(to='reactivos_sst_app.GrupoPeligrosidad')),
            ],
            options={
                'verbose_name': 'Clasificacion de peligrosidad',
                'verbose_name_plural': 'Clasificaciones de peligrosidad',
            },
        ),
        migrations.CreateModel(
            name='Propiedad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('propiedad', models.CharField(max_length=60, unique=True)),
                ('imagenes', models.ManyToManyField(related_name='propiedades', to='reactivos_sst_app.ImagenPropiedad')),
            ],
            options={
                'verbose_name_plural': 'Propiedades',
            },
        ),
        migrations.CreateModel(
            name='Reactivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=200, null=True)),
                ('nombre_frasco', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre del frasco')),
                ('r_reglas', models.CharField(blank=True, max_length=150, null=True)),
                ('s_reglas', models.CharField(blank=True, max_length=150, null=True)),
                ('n_cas', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('n_nu', models.CharField(blank=True, max_length=150, null=True)),
                ('n_icsc', models.CharField(blank=True, max_length=150, null=True)),
                ('n_rtecs', models.CharField(blank=True, max_length=150, null=True)),
                ('n_ce', models.CharField(blank=True, max_length=150, null=True)),
                ('n_einecs', models.CharField(blank=True, max_length=150, null=True)),
                ('peso_molecular', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peso molecular')),
                ('precursor', models.BooleanField(default=False, verbose_name='\xbfEs precursor?')),
                ('toxico_arma_quimica', models.BooleanField(default=False, verbose_name='\xbfQuimico toxico para armas quimicas?')),
                ('chequeado_minit', models.BooleanField(default=False, verbose_name='\xbfEs chequeado por el minit por su alta peligrosidad?')),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('propiedades', models.ManyToManyField(to='reactivos_sst_app.Propiedad')),
            ],
        ),
        migrations.CreateModel(
            name='RelExistenciaEstadoEnvase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(default=0, help_text='Cant. de envases en ese estado')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.EstadoEnvase')),
                ('existencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.Existencia')),
            ],
            options={
                'verbose_name': 'Estado de los envases',
                'verbose_name_plural': 'Estados de los envases',
            },
        ),
        migrations.CreateModel(
            name='RelExistenciaEstadoProducto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(default=0, help_text='Cant. de existencias en ese estado')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.EstadoProducto')),
                ('existencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.Existencia')),
            ],
            options={
                'verbose_name': 'Estado de las existencias',
                'verbose_name_plural': 'Estados de las existencias',
            },
        ),
        migrations.CreateModel(
            name='RelExistenciaEstadoReactivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(default=0, help_text='Cant. de envases en ese estado')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.EstadoReactivo')),
                ('existencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.Existencia')),
            ],
            options={
                'verbose_name': 'Estado de los envases',
                'verbose_name_plural': 'Estados de los envases',
            },
        ),
        migrations.CreateModel(
            name='Sinonimo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sinonimo', models.CharField(blank=True, max_length=50, null=True)),
                ('reactivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sinonimos', to='reactivos_sst_app.Reactivo')),
            ],
        ),
        migrations.CreateModel(
            name='TipoEnvase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=2)),
                ('descripcion', models.CharField(max_length=20)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.MaterialEnvase')),
            ],
            options={
                'verbose_name': 'Tipo de envases',
                'verbose_name_plural': 'Tipos de envases',
            },
        ),
        migrations.AddField(
            model_name='peligroclasificacion',
            name='reactivo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.Reactivo'),
        ),
        migrations.AddField(
            model_name='existencia',
            name='envase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.TipoEnvase'),
        ),
        migrations.AddField(
            model_name='existencia',
            name='estados_envases',
            field=models.ManyToManyField(through='reactivos_sst_app.RelExistenciaEstadoEnvase', to='reactivos_sst_app.EstadoEnvase'),
        ),
        migrations.AddField(
            model_name='existencia',
            name='estados_productos',
            field=models.ManyToManyField(through='reactivos_sst_app.RelExistenciaEstadoProducto', to='reactivos_sst_app.EstadoProducto'),
        ),
        migrations.AddField(
            model_name='existencia',
            name='estados_reactivos',
            field=models.ManyToManyField(through='reactivos_sst_app.RelExistenciaEstadoReactivo', to='reactivos_sst_app.EstadoReactivo'),
        ),
        migrations.AddField(
            model_name='existencia',
            name='firma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.Firma'),
        ),
        migrations.AddField(
            model_name='existencia',
            name='local',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.Local'),
        ),
        migrations.AddField(
            model_name='existencia',
            name='reactivo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos_sst_app.Reactivo'),
        ),
        migrations.AlterUniqueTogether(
            name='tipoenvase',
            unique_together=set([('tipo', 'material')]),
        ),
        migrations.AlterUniqueTogether(
            name='relexistenciaestadoreactivo',
            unique_together=set([('existencia', 'estado')]),
        ),
        migrations.AlterUniqueTogether(
            name='relexistenciaestadoproducto',
            unique_together=set([('existencia', 'estado')]),
        ),
        migrations.AlterUniqueTogether(
            name='relexistenciaestadoenvase',
            unique_together=set([('existencia', 'estado')]),
        ),
    ]
